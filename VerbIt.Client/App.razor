@using System.Security.Claims
@inject ILocalStorageService _localStorageService;
@inject INetworkService _networkService;
@inject DashboardTokenWatcherService _dashboardTokenWatcher;

<CascadingAuthenticationState>
    <CascadingBlazoredModal>
        <Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="RouterNavigating">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />            
            </Found>
            <NotFound>
                <LayoutView Layout="@typeof(MainLayout)">
                    <PageTitle>Sorry, there's nothing at this address.</PageTitle>
                    <NotFoundComponent/>
                </LayoutView>
            </NotFound>
        </Router>
    </CascadingBlazoredModal>
</CascadingAuthenticationState>

@code {
    public void RouterNavigating(NavigationContext context)
    {
        // We use the router's navigating event rather than the NavigationManager's,
        // because the NavigationManager doesn't fire events on *browser* navigation.
        _dashboardTokenWatcher.OnNavigated(context.Path);        
    }
}